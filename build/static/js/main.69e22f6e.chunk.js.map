{"version":3,"sources":["store/actionTypes.ts","Api.tsx","store/reducer.ts","store/store.ts","store/actionsCreators.ts","components/atom/DaysRemainText/DaysRemainText.tsx","components/molecule/TodoItem/TodoItem.tsx","components/organism/TodoList/TodoList.tsx","components/molecule/NewTodoForm/NewTodoForm.tsx","components/organism/ListContainer/ListContainer.tsx","components/molecule/Message/Message.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_TODO_SUCCESS","ADD_TODO_FAILURE","DELETE_TODO_SUCCESS","DELETE_TODO_FAILURE","TODO_STATUS_CHANGE_SUCCESS","TODO_STATUS_CHANGE_FAILURE","FETCH_TODOS_REQUEST","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILURE","RESET_SUCCESS","RESET_ERROR","BASE_URL","TODO_URL","initialState","loading","todos","error","success","reducer","state","action","type","payload","concat","message","filter","todo","_id","map","ele","store","createStore","applyMiddleware","thunk","addTodo","dispatch","axios","post","headers","then","response","data","addTodoSuccess","catch","addTodoFailure","deleteTodo","delete","messge","deleteTodoSuccess","deleteTodoFailure","onTodoStatusUpadate","todoUpdated","completed","patch","toDoUpdateSuccess","fetchTodosRequest","fetchTodosSuccess","fetchTodosFailure","resetSuccess","subscribe","DaysRemainText","endDate","useState","messageState","setMessagestate","useEffect","diffAbsolute","Date","getTime","diff","getUTCMonth","diffText","console","log","getUTCDate","getUTCHours","calcDiff","className","TodoItem","onTodoRemoval","onTodoStatusChange","Item","actions","title","onChange","e","defaultChecked","onConfirm","danger","DeleteOutlined","color","TodoList","locale","emptyText","dataSource","renderItem","pagination","position","pageSize","NewTodoForm","onFormSubmit","Form","useForm","form","onFinish","getFieldValue","description","resetFields","layout","span","name","label","wrapperCol","rules","required","placeholder","showTime","format","disabledDate","current","valueOf","now","xs","sm","md","lg","xl","htmlType","block","PlusCircleFilled","ListContainer","todoState","useSelector","useDispatch","get","justify","align","gutter","updated","find","target","checked","Message","App","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69e22f6e.chunk.js","sourcesContent":["export const ADD_TODO_SUCCESS = \"ADD_TODO_SUCCESS\";\r\nexport const ADD_TODO_FAILURE = \"ADD_TODO_SUCCESS\";\r\n\r\nexport const DELETE_TODO_SUCCESS = \"DELETE_TODO_SUCESS\";\r\nexport const DELETE_TODO_FAILURE = \"DELETE_TODO_FAILURE\";\r\n\r\nexport const TODO_STATUS_CHANGE_SUCCESS = \"TODO_STATUS_CHANGE_SUCCESS\";\r\nexport const TODO_STATUS_CHANGE_FAILURE = \"TODO_STATUS_CHANGE_FAILURE\";\r\n\r\nexport const FETCH_TODOS_REQUEST = \"FETCH_TODOS_REQUEST\";\r\nexport const FETCH_TODOS_SUCCESS = \"FETCH_TODOS_SUCCESS\";\r\nexport const FETCH_TODOS_FAILURE = \"FETCH_TODOS_FAILURE\";\r\n\r\nexport const RESET_SUCCESS = \"RESET_SUCCESS\";\r\nexport const RESET_ERROR = \"RESET_ERROR\";\r\n","export const BASE_URL = \"http://mern-biginners.herokuapp.com\";\r\nexport const TODO_URL = \"/api/todos/\";\r\n","import { TodoList } from \"../components/organism/TodoList/TodoList\";\r\nimport {\r\n  FETCH_TODOS_REQUEST,\r\n  FETCH_TODOS_SUCCESS,\r\n  FETCH_TODOS_FAILURE,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_FAILURE,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_FAILURE,\r\n  TODO_STATUS_CHANGE_SUCCESS,\r\n  TODO_STATUS_CHANGE_FAILURE,\r\n  RESET_SUCCESS,\r\n  RESET_ERROR,\r\n} from \"./actionTypes\";\r\nimport { AppReducer, TodoAction, TodoState } from \"./type\";\r\n\r\nexport const initialState: TodoState = {\r\n  loading: false,\r\n  todos: [],\r\n  error: \"\",\r\n  success: \"\",\r\n};\r\n\r\nconst reducer: AppReducer<\"todoReducer\"> = (\r\n  state: TodoState = initialState,\r\n  action: TodoAction\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_TODOS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_TODOS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        todos: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_TODOS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        todos: [],\r\n        error: action.payload,\r\n      };\r\n    case ADD_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload].concat(state.todos),\r\n        success: action.message,\r\n      };\r\n    case ADD_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.message,\r\n      };\r\n    case DELETE_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo._id !== action.payload?._id),\r\n        success: action.message,\r\n      };\r\n    case DELETE_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.message,\r\n      };\r\n    case TODO_STATUS_CHANGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((ele) => {\r\n          if (action.payload && action.payload._id === ele._id)\r\n            return action.payload;\r\n          else return ele;\r\n        }),\r\n        success: action.message,\r\n      };\r\n    case TODO_STATUS_CHANGE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.message,\r\n      };\r\n    case RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: action.message,\r\n      };\r\n    case RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_TODOS_REQUEST,\r\n  FETCH_TODOS_SUCCESS,\r\n  FETCH_TODOS_FAILURE,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_FAILURE,\r\n  TODO_STATUS_CHANGE_SUCCESS,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_FAILURE,\r\n  TODO_STATUS_CHANGE_FAILURE,\r\n  RESET_SUCCESS,\r\n  RESET_ERROR,\r\n} from \"./actionTypes\";\r\nimport { Action, ActionCreator, Dispatch } from \"redux\";\r\nimport { BASE_URL, TODO_URL } from \"../Api\";\r\nimport { ITodo, TodoAction, TodoState } from \"./type\";\r\nimport store from \"./store\";\r\nexport const fetchtodos = () => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(fetchTodosRequest());\r\n    axios\r\n      .get(BASE_URL + TODO_URL)\r\n      // .get(\"http://localhost:8080\" + BASE_URL, config)\r\n\r\n      .then((response) => {\r\n        const todos = response.data;\r\n        dispatch(fetchTodosSuccess(todos));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchTodosFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addTodo = (todo: ITodo) => {\r\n  return (dispatch: Dispatch) => {\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n    };\r\n    axios\r\n      .post(BASE_URL + TODO_URL, todo, config)\r\n      .then((response) => {\r\n        const todo = response.data;\r\n        dispatch(addTodoSuccess(\"Todo added Successfully\", todo));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(addTodoFailure(error.message));\r\n      });\r\n  };\r\n};\r\nexport const deleteTodo = (todo: ITodo) => {\r\n  return (dispatch: Dispatch) => {\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + TODO_URL + todo._id, config)\r\n      .then((response) => {\r\n        dispatch(deleteTodoSuccess(\"Todo deleted Successfully\", todo));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(deleteTodoFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const onTodoStatusUpadate = (todo: ITodo) => {\r\n  return (dispatch: Dispatch) => {\r\n    let todoUpdated = { ...todo };\r\n    if (todo.completed) {\r\n      todoUpdated.completed = false;\r\n    } else {\r\n      todoUpdated.completed = true;\r\n    }\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n    };\r\n    axios\r\n      .patch(BASE_URL + TODO_URL + todoUpdated._id, todoUpdated, config)\r\n      .then((response) => {\r\n        dispatch(\r\n          toDoUpdateSuccess(\"Todo status updated Successfully\", todoUpdated)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(toDoUpdateFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchTodosRequest: ActionCreator<Action> = () => {\r\n  return {\r\n    type: FETCH_TODOS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchTodosSuccess: ActionCreator<Action> = (todos: TodoState) => {\r\n  return {\r\n    type: FETCH_TODOS_SUCCESS,\r\n    payload: todos,\r\n  };\r\n};\r\n\r\nexport const fetchTodosFailure: ActionCreator<Action> = (error: string) => {\r\n  return {\r\n    type: FETCH_TODOS_FAILURE,\r\n    payload: null,\r\n    message: error,\r\n  };\r\n};\r\n\r\nexport function addTodoSuccess(message: string, todo: ITodo): TodoAction {\r\n  return {\r\n    type: ADD_TODO_SUCCESS,\r\n    message: message,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport function addTodoFailure(error: string): TodoAction {\r\n  return {\r\n    type: ADD_TODO_FAILURE,\r\n    payload: null,\r\n    message: error,\r\n  };\r\n}\r\n\r\nexport function deleteTodoSuccess(messge: string, todo: ITodo): TodoAction {\r\n  return {\r\n    type: DELETE_TODO_SUCCESS,\r\n    payload: todo,\r\n    message: messge,\r\n  };\r\n}\r\nexport function deleteTodoFailure(error: string): TodoAction {\r\n  return {\r\n    type: DELETE_TODO_FAILURE,\r\n    payload: null,\r\n    message: error,\r\n  };\r\n}\r\nexport function toDoUpdateSuccess(messge: string, todo: ITodo): TodoAction {\r\n  return {\r\n    type: TODO_STATUS_CHANGE_SUCCESS,\r\n    payload: todo,\r\n    message: messge,\r\n  };\r\n}\r\nexport function toDoUpdateFailure(messge: string): TodoAction {\r\n  return {\r\n    type: TODO_STATUS_CHANGE_FAILURE,\r\n    payload: null,\r\n    message: messge,\r\n  };\r\n}\r\n\r\nexport function resetSuccess(messge: string): TodoAction {\r\n  return {\r\n    type: RESET_SUCCESS,\r\n    payload: null,\r\n    message: \"\",\r\n  };\r\n}\r\n\r\nexport function resetError(messge: string): TodoAction {\r\n  return {\r\n    type: RESET_ERROR,\r\n    payload: null,\r\n    message: \"\",\r\n  };\r\n}\r\n\r\nstore.subscribe(() => {});\r\n","import React, { FC, useEffect, useState } from \"react\";\r\n\r\nexport interface IDaysRemainProps {\r\n  endDate: Date | null | undefined;\r\n  completed: boolean | undefined;\r\n}\r\n\r\nconst DaysRemainText: FC<IDaysRemainProps> = ({ endDate, completed }) => {\r\n  const [messageState, setMessagestate] = useState(\"\");\r\n  useEffect(() => {\r\n    if (completed) {\r\n      setMessagestate(\"Completed.\");\r\n    } else {\r\n      if (endDate) {\r\n        setMessagestate(calcDiff(endDate));\r\n      } else {\r\n        setMessagestate(\"-\");\r\n      }\r\n    }\r\n  }, [completed, endDate]);\r\n  function calcDiff(endDate: Date): string {\r\n    if (endDate) {\r\n      const diffAbsolute = new Date(\r\n        new Date(endDate).getTime() - new Date().getTime()\r\n      );\r\n\r\n      let diff = diffAbsolute.getUTCMonth();\r\n      let diffText = \"months\";\r\n      console.log(\"nnn\");\r\n      console.log(diff);\r\n      if (diff < 1) {\r\n        diff = diffAbsolute.getUTCDate() - 1;\r\n        diffText = \"days\";\r\n      }\r\n      if (diff < 1) {\r\n        diff = diffAbsolute.getUTCHours() - 1;\r\n        diffText = \"hours\";\r\n      }\r\n      return `${diff} ${diffText} remaining`;\r\n    }\r\n    return \"\";\r\n  }\r\n  return (\r\n    <div className={completed ? \"text-green-500\" : \"text-red-500\"}>\r\n      {messageState}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DaysRemainText;\r\n","import React from \"react\";\r\nimport { Tooltip, Tag, List, Button, Popconfirm, Checkbox } from \"antd\";\r\n\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./TodoItem.less\";\r\nimport { ITodo } from \"../../../store/type\";\r\nimport DaysRemainText from \"../../atom/DaysRemainText/DaysRemainText\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\n\r\ninterface ITodoItemProps {\r\n  todo: ITodo;\r\n  onTodoRemoval: (todo: ITodo) => void;\r\n  onTodoStatusChange: (todo: ITodo, e: CheckboxChangeEvent) => void;\r\n}\r\n\r\nexport const TodoItem: React.FC<ITodoItemProps> = ({\r\n  todo,\r\n  onTodoRemoval,\r\n  onTodoStatusChange,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <List.Item\r\n        actions={[\r\n          <Tooltip\r\n            title={todo.completed ? \"Mark as uncompleted\" : \"Mark as completed\"}\r\n          >\r\n            <Checkbox\r\n              onChange={(e) => onTodoStatusChange(todo, e)}\r\n              defaultChecked={todo.completed}\r\n            ></Checkbox>\r\n          </Tooltip>,\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete?\"\r\n            onConfirm={() => {\r\n              onTodoRemoval(todo);\r\n            }}\r\n          >\r\n            <Button className=\"align-center\" type=\"primary\" danger>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          </Popconfirm>,\r\n        ]}\r\n        className=\"list-item\"\r\n        key={todo._id}\r\n      >\r\n        <div className=\"todo-item\">\r\n          <div>\r\n            <Tag color={\"#BEBEBE\"} className=\"todo-tag\">\r\n              {todo.title}\r\n            </Tag>\r\n            <div className=\"align-text-bottom text-base text-left bottomInfo block bg-blac\">\r\n              <DaysRemainText\r\n                endDate={todo.endDate}\r\n                completed={todo.completed}\r\n              ></DaysRemainText>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </List.Item>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { List } from \"antd\";\r\n\r\nimport { ITodo } from \"../../../store/type\";\r\nimport { TodoItem } from \"../../molecule/TodoItem/TodoItem\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\n\r\ninterface ITodoListProps {\r\n  todos: ITodo[];\r\n  onTodoRemoval: (todo: ITodo) => void;\r\n  onTodoStatusChange: (todo: ITodo, e: CheckboxChangeEvent) => void;\r\n}\r\n\r\nexport const TodoList: React.FC<ITodoListProps> = ({\r\n  todos,\r\n  onTodoRemoval,\r\n  onTodoStatusChange,\r\n}) => (\r\n  <List\r\n    locale={{\r\n      emptyText: \"Nothing to be done\",\r\n    }}\r\n    dataSource={todos}\r\n    renderItem={(todo) => (\r\n      <TodoItem\r\n        todo={todo}\r\n        onTodoStatusChange={onTodoStatusChange}\r\n        onTodoRemoval={onTodoRemoval}\r\n      />\r\n    )}\r\n    pagination={{\r\n      position: \"bottom\",\r\n      pageSize: 10,\r\n    }}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Input, DatePicker } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\n\r\nimport \"./NewTodoForm.less\";\r\nimport { ITodo } from \"../../../store/type\";\r\nimport moment from \"moment\";\r\n\r\ninterface IAddTodoFormProps {\r\n  onFormSubmit: (todo: ITodo) => void;\r\n}\r\n\r\nexport const NewTodoForm: React.FC<IAddTodoFormProps> = ({ onFormSubmit }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = () => {\r\n    onFormSubmit({\r\n      title: form.getFieldValue(\"title\"),\r\n      description: form.getFieldValue(\"description\"),\r\n      endDate: form.getFieldValue(\"endDate\"),\r\n    });\r\n\r\n    form.resetFields();\r\n  };\r\n\r\n  function disabledDate(current: moment.Moment) {\r\n    return current && current.valueOf() < Date.now();\r\n  }\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n      className=\"todo-form\"\r\n    >\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form.Item\r\n            name={\"title\"}\r\n            label=\"Todo title : \"\r\n            wrapperCol={{ span: 100 }}\r\n            rules={[{ required: true, message: \"name required\" }]}\r\n          >\r\n            <Input placeholder=\"add new todo\" />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form.Item name={\"description\"} label=\"Todo description : \">\r\n            <Input placeholder=\"add description\" />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form.Item name=\"endDate\" label=\"Closing time : \">\r\n            <DatePicker\r\n              showTime\r\n              format=\"YYYY-MM-DD HH:mm:ss\"\r\n              className=\"w-full\"\r\n              disabledDate={disabledDate}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={7} lg={5} xl={4}>\r\n          <Button type=\"ghost\" htmlType=\"submit\" block>\r\n            <PlusCircleFilled />\r\n            Add todo\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./ListContainer.less\";\r\nimport { ITodo, TodoState } from \"../../../store/type\";\r\nimport { TodoList } from \"../TodoList/TodoList\";\r\nimport { NewTodoForm } from \"../../molecule/NewTodoForm/NewTodoForm\";\r\nimport {\r\n  addTodo,\r\n  fetchtodos,\r\n  deleteTodo,\r\n  onTodoStatusUpadate,\r\n} from \"../../../store/actionsCreators\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\n\r\ninterface ITodoListContainerProps {}\r\n\r\nexport const ListContainer: React.FunctionComponent<ITodoListContainerProps> =\r\n  () => {\r\n    const todoState: TodoState = useSelector((state: TodoState) => state);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch(fetchtodos());\r\n    }, []);\r\n\r\n    const onFormSubmit = (todo: ITodo): void => {\r\n      dispatch(addTodo(todo));\r\n    };\r\n\r\n    const onRemoveTodo = (todo: ITodo): void => {\r\n      dispatch(deleteTodo(todo));\r\n    };\r\n\r\n    const onTodoStatusChange = (todo: ITodo, e: CheckboxChangeEvent): void => {\r\n      dispatch(onTodoStatusUpadate(todo));\r\n      const updated = todoState.todos.find((ele) => ele._id === todo._id);\r\n      if (updated) e.target.checked = updated.completed == true ? true : false;\r\n    };\r\n\r\n    return todoState.loading ? (\r\n      <h2>Loading...</h2>\r\n    ) : (\r\n      <Row justify=\"center\" align=\"middle\" gutter={[0, 15]}>\r\n        <Col\r\n          xs={{ span: 23 }}\r\n          sm={{ span: 23 }}\r\n          md={{ span: 21 }}\r\n          lg={{ span: 20 }}\r\n          xl={{ span: 18 }}\r\n        ></Col>\r\n\r\n        <Col\r\n          xs={{ span: 23 }}\r\n          sm={{ span: 23 }}\r\n          md={{ span: 21 }}\r\n          lg={{ span: 20 }}\r\n          xl={{ span: 18 }}\r\n        >\r\n          <Card title=\"Create a new todo\">\r\n            <NewTodoForm onFormSubmit={onFormSubmit} />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 23 }}\r\n          sm={{ span: 23 }}\r\n          md={{ span: 21 }}\r\n          lg={{ span: 20 }}\r\n          xl={{ span: 18 }}\r\n        >\r\n          <Card title=\"Todo List\">\r\n            <TodoList\r\n              todos={todoState.todos}\r\n              onTodoRemoval={onRemoveTodo}\r\n              onTodoStatusChange={onTodoStatusChange}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\nexport default ListContainer;\r\n","import { message } from \"antd\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetSuccess } from \"../../../store/actionsCreators\";\r\nimport { TodoState } from \"../../../store/type\";\r\n\r\nconst Message: FC = () => {\r\n  const success: string = useSelector((state: TodoState) => state.success);\r\n  const error: string = useSelector((state: TodoState) => state.error);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (success) {\r\n      message.success(success);\r\n      dispatch(resetSuccess(\"\"));\r\n    }\r\n  }, [dispatch, success]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(error);\r\n      dispatch(resetSuccess(\"\"));\r\n    }\r\n  }, [dispatch, error]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Message;\r\n","import React, { FC, useEffect } from \"react\";\nimport \"./App.less\";\nimport { fetchTodosRequest } from \"./store/actionsCreators\";\nimport ListContainer from \"./components/organism/ListContainer/ListContainer\";\nimport { Provider } from \"react-redux\";\nimport { Store } from \"redux\";\nimport Message from \"./components/molecule/Message/Message\";\n\ninterface IAppProps {\n  store: Store;\n}\n\nexport const App: React.FC<IAppProps> = ({ store }) => {\n  useEffect(() => {\n    fetchTodosRequest();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <div className=\"h-auto relative bg-gradient-to-r from-black via-gray-500 to-black\">\n        <img\n          className=\"fixed w-screen top-0 left-0 opacity-30 object-cover h-screen\"\n          src=\"/images/bg2.jpg\"\n          alt=\"\"\n        />\n\n        <div className=\"relative\">\n          <ListContainer></ListContainer>\n          <Message></Message>\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}